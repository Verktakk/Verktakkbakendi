"""inital migration

Revision ID: 5de34f5ddb55
Revises: 
Create Date: 2024-01-10 21:10:53.480082

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5de34f5ddb55'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('User',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"User_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='User_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_User_phone_number', 'User', ['phone_number'], unique=True)
    op.create_index('ix_User_id', 'User', ['id'], unique=False)
    op.create_index('ix_User_email', 'User', ['email'], unique=True)
    op.create_table('Profile',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Profile_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('photo_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('poc', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name='Profile_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='Profile_pkey')
    )
    op.create_index('ix_Profile_id', 'Profile', ['id'], unique=False)
    op.create_table('Seller',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Seller_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('profile_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['Profile.id'], name='Seller_profile_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='Seller_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_Seller_id', 'Seller', ['id'], unique=False)
    op.create_table('JobListing',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"JobListing_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('seller_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['seller_id'], ['Seller.id'], name='JobListing_seller_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='JobListing_pkey')
    )
    op.create_table('Tag',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Tag_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Tag_pkey')
    )
    op.create_index('ix_Tag_name', 'Tag', ['name'], unique=True)
    op.create_table('job_listing_tag_association',
    sa.Column('job_listing_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['job_listing_id'], ['JobListing.id'], name='job_listing_tag_association_job_listing_id_fkey'),
    sa.ForeignKeyConstraint(['tag_id'], ['Tag.id'], name='job_listing_tag_association_tag_id_fkey')
    )
    op.create_table('Review',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Review_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('profile_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('listing_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['listing_id'], ['JobListing.id'], name='Review_listing_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['profile_id'], ['Profile.id'], name='Review_profile_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Review_pkey'),
    sa.UniqueConstraint('listing_id', name='Review_listing_id_key')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('Seller_profile_id_fkey', 'Seller', type_='foreignkey')
    op.drop_constraint('Review_profile_id_fkey', 'Review', type_='foreignkey')
    op.drop_constraint('Review_listing_id_fkey', 'Review', type_='foreignkey')
    op.drop_constraint('job_listing_tag_association_job_listing_id_fkey', 'job_listing_tag_association', type_='foreignkey')
    op.drop_constraint('job_listing_tag_association_tag_id_fkey', 'job_listing_tag_association', type_='foreignkey')
    op.drop_index('ix_Profile_id', table_name='Profile')
    op.drop_table('Profile')
    op.drop_table('JobListing')
    op.drop_table('Review')
    op.drop_index('ix_Tag_name', table_name='Tag')
    op.drop_table('Tag')
    op.drop_table('job_listing_tag_association')
    op.drop_index('ix_Seller_id', table_name='Seller')
    op.drop_table('Seller')
    op.drop_index('ix_User_email', table_name='User')
    op.drop_index('ix_User_id', table_name='User')
    op.drop_index('ix_User_phone_number', table_name='User')
    op.drop_table('User')
    # ### end Alembic commands ###
